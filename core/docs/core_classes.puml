@startuml

abstract class Controller {
  {abstract}-storage
  {abstract}-properties
  -paths
  +detections
  +start()
  +stop()
}

class DesktopController {
  #storage
}

class DetectionsStorage {
   -path
   +save()
   +load()
}

class ObjectSeekerFactory {
   +getObjSeekers()
}

class PicSeekerFactory {
   +getPicSeekers()
}

class Detection {
  +path
  +descriptions
  +state
}

class Request {
  -properties
  +post()
}

class GoogleResponse {
}

Controller *- Properties
Controller *- DetectionsStorage
Controller *- "0..*" Detection
Controller o..> Detections
Controller o..> "1..*" Seeker
Controller ..> ObjectSeekerFactory
Controller ..> PicSeekerFactory
DesktopController ..> Properties
DesktopController *- DetectionsStorage
Request o..> GoogleResponse
Detection *- Detections
Seeker o..> "1" Detection
PicsSeeker ..> Detection
PicSeekerFactory ..> DesktopFS
PicSeekerFactory o..> "0..*" Seeker
PicSeekerFactory ..> Detection
PicSeekerFactory o..> "0..*" PicsSeeker
DesktopFS o..> "0..*" Detection
ObjectSeekerFactory ..> Properties
ObjectSeekerFactory ..> Detection
ObjectSeekerFactory o..> "0..*" Seeker
ObjectSeekerFactory o..> "0..*" GoogleObjSeeker
ObjectSeeker ..> Detection
GoogleVision ..> Properties
GoogleVision *- Request
GoogleVision o..> GoogleRequest
GoogleVision o..> GoogleResponse
GoogleObjSeeker o..> "0..*" Detection
GoogleObjSeeker *- Properties
GoogleObjSeeker o..> GoogleVision
GoogleObjSeeker o..> GoogleResponse
GoogleObjSeeker ..> Detections

interface ObjectSeeker { }

enum Detections {
   PROCESSING
   NO
   FOUND
   UNKNOWN
}

interface Seeker {
  {abstract} +find()
  {abstract} +stop()
}

interface PicsSeeker {
  +picFormats
  {abstract} +find()
  {abstract} +stop()
}


Controller <|.. DesktopController
PicsSeeker <|.. DesktopFS
Seeker <|.. PicsSeeker
ObjectSeeker ..|> Seeker
ObjectSeeker <|.. GoogleObjSeeker

class DesktopFS {
   -dirPath
   -recursive
   +find()
   +stop()
}

class GoogleObjSeeker {
   -path
   -properties
   +find()
   +stop()
}

class GoogleVision {
   -properties
   +doRequest()
}

@enduml